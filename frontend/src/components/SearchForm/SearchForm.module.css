/* SearchForm.module.css */

/* Form Layout */
.searchForm {
  position: relative;
  max-width: 600px;
  margin: 0 auto;
  padding: calc(var(--space-sm) + var(--space-lg));
  background: var(--color-surface);
  border: 2px solid var(--color-border);
  border-radius: 10px;
  box-shadow: var(--shadow-lg), 0 0 0 1px rgba(255, 255, 255, 0.05) inset;
  backdrop-filter: blur(10px);
  overflow: hidden;
  transition: all var(--transition-medium);
}

.searchForm::before {
  content: "";
  position: absolute;
  inset: 0;
  background: linear-gradient(
    135deg,
    rgba(59, 130, 246, 0.02),
    rgba(139, 92, 246, 0.02),
    rgba(245, 158, 11, 0.02)
  );
  opacity: 0;
  transition: opacity var(--transition-medium);
  pointer-events: none;
}

.searchForm:hover::before,
.searchForm:focus-within::before {
  opacity: 1;
}

.searchForm:hover {
  transform: translateY(-4px);
  box-shadow: var(--shadow-xl), 0 0 0 1px rgba(255, 255, 255, 0.1) inset;
  border-color: var(--color-primary-light);
}

.searchForm:focus-within {
  border-color: var(--color-primary);
  box-shadow: var(--shadow-xl), 0 0 0 1px var(--color-primary) inset,
    0 0 20px rgba(59, 130, 246, 0.2);
}

/* Label Styles */
.label {
  position: relative;
  display: flex;
  flex-direction: column;
  gap: var(--space-sm);
  margin-bottom: var(--space-xl);
  font-size: var(--font-size-md);
  font-weight: 600;
  color: var(--color-text-primary);
  cursor: pointer;
  transition: color var(--transition-fast);
}

.label:hover {
  color: var(--color-primary);
}

.label::after {
  content: "";
  position: absolute;
  bottom: -var(--space-xs);
  left: 0;
  width: 0;
  height: 2px;
  background: linear-gradient(90deg, var(--color-primary), var(--color-accent));
  border-radius: 1px;
  transition: width var(--transition-medium);
}

.label:focus-within::after {
  width: 100%;
}

/* Input Styles */
.input {
  position: relative;
  width: 100%;
  padding: var(--space-lg) var(--space-xl);
  background: var(--color-background);
  border: 2px solid var(--color-border);
  border-radius: var(--border-radius-lg);
  font-size: var(--font-size-md);
  font-weight: 500;
  color: var(--color-text-primary);
  transition: all var(--transition-medium);
  font-family: var(--font-family-base);
  box-shadow: var(--shadow-sm);
}

.input::placeholder {
  color: var(--color-text-tertiary);
  font-weight: 400;
  transition: color var(--transition-fast);
}

.input:hover {
  border-color: var(--color-primary-light);
  box-shadow: var(--shadow-md);
  transform: translateY(-1px);
}

.input:focus {
  outline: none;
  border-color: var(--color-primary);
  box-shadow: var(--shadow-md), 0 0 0 3px rgba(59, 130, 246, 0.1);
  transform: translateY(-2px);
  background: rgba(255, 255, 255, 0.02);
}

.input:focus::placeholder {
  color: var(--color-text-secondary);
  transform: translateX(4px);
}

/* Input Icons (optional enhancement) */
.input:focus {
  background-image: linear-gradient(
    90deg,
    transparent 0%,
    rgba(59, 130, 246, 0.02) 50%,
    transparent 100%
  );
}

/* Generate Button */
.generateButton {
  position: relative;
  width: 100%;
  padding: var(--space-lg) var(--space-xxl);
  background: linear-gradient(
    135deg,
    var(--color-primary),
    var(--color-primary-light)
  );
  color: var(--color-text-inverse);
  font-size: var(--font-size-lg);
  font-weight: 700;
  border: none;
  border-radius: var(--border-radius-lg);
  box-shadow: var(--shadow-md);
  cursor: pointer;
  transition: all var(--transition-medium);
  font-family: var(--font-family-base);
  text-transform: none;
  letter-spacing: 0.01em;
  overflow: hidden;
}

.generateButton::before {
  content: "";
  position: absolute;
  inset: 0;
  background: linear-gradient(
    45deg,
    transparent 30%,
    rgba(255, 255, 255, 0.2) 50%,
    transparent 70%
  );
  transform: translateX(-100%);
  transition: transform var(--transition-medium);
}

.generateButton:hover::before {
  transform: translateX(100%);
}

.generateButton:hover {
  background: linear-gradient(
    135deg,
    var(--color-primary-dark),
    var(--color-primary)
  );
  transform: translateY(-3px) scale(1.02);
  box-shadow: 0 12px 24px rgba(59, 130, 246, 0.3), var(--shadow-lg);
}

.generateButton:active {
  transform: translateY(-1px) scale(0.98);
  box-shadow: var(--shadow-md);
}

.generateButton:focus-visible {
  outline: 2px solid var(--color-primary-dark);
  outline-offset: 2px;
}

/* Loading State (optional) */
.generateButton:disabled {
  background: var(--color-border);
  color: var(--color-text-tertiary);
  cursor: not-allowed;
  transform: none;
  box-shadow: var(--shadow-sm);
}

.generateButton:disabled:hover {
  transform: none;
  box-shadow: var(--shadow-sm);
}

/* Floating Particles */
.searchForm .particle {
  position: absolute;
  border-radius: 50%;
  opacity: 0;
  pointer-events: none;
  animation: particleFloat 4s ease-in-out infinite;
}

.searchForm .particle1 {
  top: 10%;
  left: 5%;
  width: 8px;
  height: 8px;
  background: var(--color-primary);
  animation-delay: 0s;
}

.searchForm .particle2 {
  top: 20%;
  right: 10%;
  width: 6px;
  height: 6px;
  background: var(--color-accent);
  animation-delay: 1.5s;
}

.searchForm .particle3 {
  bottom: 15%;
  left: 8%;
  width: 4px;
  height: 4px;
  background: var(--color-success);
  animation-delay: 3s;
}

.searchForm:hover .particle,
.searchForm:focus-within .particle {
  opacity: 0.6;
}

/* Micro-interactions */
.input:valid {
  border-color: var(--color-success);
}

.input:invalid:not(:placeholder-shown) {
  border-color: var(--color-error);
  box-shadow: var(--shadow-sm), 0 0 0 3px rgba(239, 68, 68, 0.1);
}

/* Form Animations */
@keyframes particleFloat {
  0%,
  100% {
    transform: translateY(0px) rotate(0deg);
    opacity: 0;
  }
  25%,
  75% {
    opacity: 0.6;
  }
  50% {
    transform: translateY(-20px) rotate(180deg);
    opacity: 0.8;
  }
}

/* Responsive Design */
@media (max-width: 768px) {
  .searchForm {
    margin: 0 var(--space-md);
    padding: var(--space-xxl) var(--space-lg);
  }

  .generateButton {
    font-size: var(--font-size-md);
    padding: var(--space-md) var(--space-xl);
  }

  .input {
    padding: var(--space-md) var(--space-lg);
    font-size: var(--font-size-sm);
  }
}

@media (max-width: 480px) {
  .searchForm {
    margin: 0 var(--space-sm);
    padding: var(--space-xl) var(--space-md);
  }

  .searchForm .particle1,
  .searchForm .particle2,
  .searchForm .particle3 {
    display: none;
  }
}

/* High Contrast Mode */
@media (prefers-contrast: high) {
  .input {
    border-width: 3px;
  }

  .generateButton {
    border: 2px solid var(--color-primary-dark);
  }

  .searchForm {
    border-width: 3px;
  }
}

/* Reduced Motion */
@media (prefers-reduced-motion: reduce) {
  .searchForm:hover {
    transform: none;
  }

  .generateButton:hover {
    transform: translateY(-1px);
  }

  .input:hover {
    transform: none;
  }

  .searchForm .particle1,
  .searchForm .particle2,
  .searchForm .particle3 {
    animation: none;
    opacity: 0.3;
  }

  .generateButton::before {
    animation: none;
  }

  .hero::after {
    animation: none;
  }
}

/* Focus Management */
.searchForm:focus-within .label {
  color: var(--color-primary);
}

/* Glass Effect Enhancement */
@supports (backdrop-filter: blur(10px)) {
  .searchForm {
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(10px);
  }
}

/* Dark Mode Enhancements */
@media (prefers-color-scheme: dark) {
  .searchForm {
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3),
      0 0 0 1px rgba(255, 255, 255, 0.1) inset;
  }

  .input {
    background: rgba(0, 0, 0, 0.2);
  }

  .input:focus {
    background: rgba(0, 0, 0, 0.1);
  }
}
